//Question: 
//Given an aaray[] of size N. The task is to find the first repeating element in the array of integers, i.e, 
//an element that occurs more than once and whose index of first occurence is smallest? 
//Constraints:        1<=N<=1e6
//                     1 <=A[i]<=1e6

//Brute force approach:
//Assume an array containing indexes of the elements on the array arr[]

#include "bits/stdc++.h"
using namespace std;
int main(){

    int minidx=INT_MAX;   //minidx is our asnwer, index of that element that is coming more than once and also have an index lesser than other elements'(which are aalso coming twice) indexes.
    int n;//size of an array

    cout<<"Enter the size:\n";
    cin>>n;
    int arr[n];
    cout<<"Enter your values:\n";

    for (int i=0;i<n;i++){
        cin>>arr[n];
    }

    const int N=1e6+1;  //size of the indexes' array
    int idx[N];
    for (int i=0;i<N;i++){
        idx[i]=-1;//storing -1 to all the positions in the array
    }
    
    for(int i=0; i<n;i++){
        if (idx[arr[i]]!=-1){
            minidx=min(minidx, idx[arr[i]]);//if the index is not -1 that's means the number has come before in the array
        }
        else{
            idx[arr[i]]=i;   //replacing the elements of the index' array with the index of the element of arr[]
        }
    }
	if (minidx==INT_MAX){
		cout<<"-1";
	}
	else{
	
    cout<<minidx+1<<endl;
    }
	return 0;
}